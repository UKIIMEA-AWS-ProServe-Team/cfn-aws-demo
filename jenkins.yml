AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EnvironmentName:
    Type: String
  PublicSubnet2:
    Type: String
  SSHIngressSecurityGroup:
    Type: String
  VPCId:
    Type: String
  LambdaArn:
    Type: String
  AMIId:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: JenkinsAMIId

Resources:

  LambdaOnDelete:
    DependsOn: JenkinsInstance
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref LambdaArn

  JenkinsInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      ImageId: !Ref AMIId
      InstanceType: t3a.small
      KeyName: automation
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref JenkinsENI
          DeviceIndex: 0
      Tags:
        -
          Key: Name
          Value: !Sub ${EnvironmentName}-Jenkins
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            /opt/aws/bin/cfn-signal --exit-code 0 --resource JenkinsInstance --region ${AWS::Region} --stack ${AWS::StackName};

  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 8080, 8443 + SSH
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      Tags:
        -
          Key: Name
          Value: !Sub ${EnvironmentName}-jenkins-sg

  JenkinsENI:
    Type: AWS::EC2::NetworkInterface
    Properties: 
      GroupSet: 
        - !GetAtt JenkinsSecurityGroup.GroupId
      SubnetId: !Ref PublicSubnet2
      Tags:
        -
          Key: Name
          Value: !Sub ${EnvironmentName}-JenkinsENI

Outputs:

  JenkinsPubIp:
    Value: !GetAtt JenkinsInstance.PublicIp