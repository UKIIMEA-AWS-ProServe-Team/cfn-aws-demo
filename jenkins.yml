AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  PublicSubnet2:
    Type: String
  SSHIngressSecurityGroup:
    Type: String
  VPCId:
    Type: String

Resources:
  JenkinsInstance:
    DependsOn: JenkinsPasswd
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      ImageId: ami-0389b2a3c4948b1a0
      InstanceType: t3a.small
      KeyName: automation
      IamInstanceProfile: !Ref JenkinsProfile      
      NetworkInterfaces:
         - NetworkInterfaceId: !Ref JenkinsENI
           DeviceIndex: 0
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}-Jenkins
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum -y update;
            amazon-linux-extras install java-openjdk11 docker -y;
            wget -O /etc/yum.repos.d/jenkins.repo  http://pkg.jenkins-ci.org/redhat/jenkins.repo;
            rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key;
            yum install jenkins -y;
            systemctl start docker;
            systemctl enable docker;
            usermod -aG docker jenkins;
            usermod -aG docker ec2-user;
            systemctl start jenkins.service;
            systemctl enable jenkins.service;
            sleep 15s;
            cat /var/lib/jenkins/secrets/initialAdminPassword;
            aws ssm put-parameter --name /JenkinsPasswd --value "$(cat /var/lib/jenkins/secrets/initialAdminPassword)" --type String --region eu-west-2 --overwrite;
            /opt/aws/bin/cfn-signal --exit-code 0 --resource JenkinsInstance --region ${AWS::Region} --stack ${AWS::StackName};

  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 8080, 8443
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: 0.0.0.0/0          
      Tags:
        -
          Key: Name
          Value: jenkins-sg

  JenkinsENI:
    Type: AWS::EC2::NetworkInterface
    Properties: 
      GroupSet: 
        - !GetAtt JenkinsSecurityGroup.GroupId
        - !Ref SSHIngressSecurityGroup
      SubnetId: !Ref PublicSubnet2
      Tags:
        -
          Key: Name
          Value: JenkinsENI

  JenkinsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Jenkins-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for EC2 to read/write SSM Parameters via CLI
      MaxSessionDuration: 3600 # Role active for 1 hour (Implies no scaling after an hour - spot instances!)
      Path: /
      Policies: 
        - PolicyName: Jenkins-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:AddTagsToResource
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:RemoveTagsFromResource
                Resource: arn:aws:ssm:*:*:parameter/*
      Tags: 
        -
          Key: Name
          Value: JenkinsSSMRole
  
  JenkinsProfile:
    DependsOn: JenkinsRole
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: Jenkins-Profile
      Path: /
      Roles: 
        - Jenkins-Role

  JenkinsPasswd:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: JenkinsPasswd
      Type: String
      Value: "Temp Value"

Outputs:

  JenkinsPubIp:
    Value: !GetAtt JenkinsInstance.PublicIp

  JenkinsPasswd:
    Value: !GetAtt JenkinsPasswd.Value      