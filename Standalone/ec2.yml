AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  EnvironmentName:
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3a.nano
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.8xlarge
    - m5.12xlarge
    - m5.16xlarge
    - m5.24xlarge
    - m5.metal
    - m5a.large
    - m5a.xlarge
    - m5a.2xlarge
    - m5a.4xlarge
    - m5a.8xlarge
    - m5a.12xlarge
    - m5a.16xlarge
    - m5a.24xlarge
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - t3.nano
    - t3.micro
    - t3.small
    - t3.medium
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - t3a.nano
    - t3a.micro
    - t3a.small
    - t3a.medium
    - t3a.large
    - t3a.xlarge
    - t3a.2xlarge

Resources:

  MyInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      ImageId: ami-01a6e31ac994bbc09
      SecurityGroupIds: 
        - !Ref MySecurityGroup
      IamInstanceProfile:
        !Ref MyProfile
      InstanceType: !Ref 'InstanceType'
      KeyName: automation
  # This block retains the volume AND a snapshot
      BlockDeviceMappings:
        -
          DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: false
            Encrypted: false
            # SnapshotId:
            VolumeSize: 8

      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            aws ec2 create-tags --resources $(aws ec2 describe-volumes --filters \
            Name=attachment.instance-id,Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id) \
            Name=attachment.device,Values=/dev/xvda --query \
            'Volumes[*].[VolumeId]' --region=eu-west-2 --out text | cut -f 1) --tags Key=Backup1357,Value=${EnvironmentName} \
            Key=Name,Value=${EnvironmentName}-Vol --region eu-west-2;
            /opt/aws/bin/cfn-signal --exit-code 0 --resource MyInstance --region ${AWS::Region} --stack ${AWS::StackName};
      Tags:
        -
          Key: Name
          Value: !Sub ${EnvironmentName}-Instance
        -
          Key: Backup1357
          Value: Test


  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Ingress
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  TagRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-EBS-Tagging-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for EC2 to tag EBS volumes
      MaxSessionDuration: 3600 # Role effective for 1 hour
      Path: /
      Policies: 
        - PolicyName: !Sub ${EnvironmentName}-EBS-Tagging-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:Describe*"
                  - "ec2:CreateTags"
                Resource: "*"
      Tags: 
        -
          Key: Name
          Value: EBS-Tagging

  SSMRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: !Sub ${EnvironmentName}-SSM-Params-Role
    AssumeRolePolicyDocument:
      Version: 2012-10-17
      Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
            - 'sts:AssumeRole'
    Description: Role for EC2 to read/write SSM Parameters via CLI
    MaxSessionDuration: 3600 # Role active for 1 hour (Implies no scaling after an hour - spot instances!)
    Path: /
    Policies: 
      - PolicyName: !Sub ${EnvironmentName}-SSM-Params-Policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
              Resource: arn:aws:ssm:*:*:parameter/*
    Tags: 
      -
        Key: Name
        Value: !Sub ${EnvironmentName}-TempSSMRole

  MyProfile:
    DependsOn: TagRole
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub ${EnvironmentName}-Tag-Profile
      Path: /
      Roles: 
        - !Sub ${EnvironmentName}-EBS-Tagging-Role
        - !Sub ${EnvironmentName}-SSM-Params-Role