# The "LaunchFleet" section has a lot of issues. As of 7-04-20 the AWS Docs are incomplete. Raised issue with AWS
# and they admitted they are working on mapping out all the dependencies and interactions. Some of the AWS example
# snippets do not work in many circumstances due to un-documented dependencies
#
# This template also defines roles to read parameters from SSM
#
AWSTemplateFormatVersion: "2010-09-09"
Description: "Docker Worker Node Launch Template"

Resources:
  WorkerNodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-Template
      LaunchTemplateData: 
        CapacityReservationSpecification: 
          CapacityReservationPreference: none
        CreditSpecification: 
          CpuCredits: standard
        IamInstanceProfile:
          Name: !Ref WorkerProfile
        ImageId: ami-0389b2a3c4948b1a0
        InstanceType: t3a.nano
        KeyName: automation
        # SecurityGroupIds: 
        #   - !Ref SSHIngressSecurityGroup
        #   - !Ref WebIngressSecurityGroup
        #   - !Ref DockerSecurityGroup
        TagSpecifications:
          -
            ResourceType: instance
            Tags:
              - 
                Key: Name
                Value: !Ref AWS::StackName
          -
            ResourceType: volume
            Tags:
              -
                Key: Name
                Value: !Ref AWS::StackName
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash -xe
              yum update -y 

  WorkerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub EC2-SSM-Role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for EC2 to read SSM Parameters via CLI
      MaxSessionDuration: 3600 # Role active for 1 hour
      Path: /
      Policies: 
        - PolicyName: !Sub EC2-SSM-Policy-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                Resource: arn:aws:ssm:*:*:parameter/*
      Tags: 
        -
          Key: Name
          Value: !Ref AWS::StackName
  
  WorkerProfile:
    DependsOn: WorkerRole
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub Read-SSM-${AWS::StackName}
      Path: /
      Roles: 
        - !Ref WorkerRole

  LaunchFleet:
    Type: AWS::EC2::EC2Fleet
    Properties:
      LaunchTemplateConfigs: 
      - LaunchTemplateSpecification: 
          LaunchTemplateId: !Ref WorkerNodeLaunchTemplate
          Version: 1
        Overrides:
          - 
            InstanceType: t3a.micro
            Priority: 1
          - 
            InstanceType: t3.micro
            Priority: 2
          - 
            InstanceType: t3a.small
            Priority: 3        
          - 
            InstanceType: t3.small
            Priority: 4
          - 
            InstanceType: m5.large
            Priority: 5
          - 
            InstanceType: c5.large
            Priority: 6                     
      TargetCapacitySpecification:
        TotalTargetCapacity: 2
        #OnDemandTargetCapacity: 1 
        SpotTargetCapacity: 2
        DefaultTargetCapacityType: spot
      # Type: instant seems to be required to mix spot and on-demand. This is contrary to AWS Documentation.
      # NOTE: instances created with "Type: instant" cannot be deleted via CFN
      Type: maintain
      TerminateInstancesWithExpiration: true  # Didn't launch without this in combo with Type: request
      ExcessCapacityTerminationPolicy: termination # Can't use with Type: instant
      SpotOptions:
        AllocationStrategy: diversified # Spread across subnets
        MaxTotalPrice: 0.1
      OnDemandOptions:
        MaxTotalPrice: 0.1
      ReplaceUnhealthyInstances: true # Only works with Type: maintain