
# Demo: Not for production use, no security validation
AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  EnvironmentName:
    Description: A UNIQUE name for the environment
    Type: String
    Default: DEMO

  NumberOfWorkerNodes:
    Description: Number of worker nodes requested
    Type: Number
    Default: 2
    MaxValue: 10

  VpcCIDR:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.10.0/24

  PublicSubnet2CIDR:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.11.0/24

Resources:

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties :
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/vpc-nested.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR

  MgrENI:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/MgrENI.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        DockerSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.DockerSecurityGroup]
        SSHIngressSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.SSHIngressSecurityGroup]
        WebIngressSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.WebIngressSecurityGroup]
        PublicSubnet1:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet1]

  DockerMgr:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/EC2-DockerMgr.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        MgrENI:
          Fn::GetAtt: [MgrENI, Outputs.MgrENI]

  WorkerNodeLaunchTemplate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/EC2-WorkerLaunchTemplate.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        DockerSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.DockerSecurityGroup]
        SSHIngressSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.SSHIngressSecurityGroup]
        WebIngressSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.WebIngressSecurityGroup]
        PublicSubnet1:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet1]

  ASGGroup:
    DependsOn: 
      - DockerMgr
      - DemoALB
      - WorkerNodeLaunchTemplate
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/ASG.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NumberOfWorkerNodes: !Ref NumberOfWorkerNodes
        WorkerNodeLaunchTemplate: 
          Fn::GetAtt: [WorkerNodeLaunchTemplate, Outputs.WorkerNodeLaunchTemplate]
        PublicSubnet1:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet1]
        PublicSubnet2:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet2]
        ALBTargetGroup:
          Fn::GetAtt: [DemoALB, Outputs.ALBTargetGroup]

  DemoALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/ALB.yml
      Parameters:
        PublicSubnet1:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet1]
        PublicSubnet2:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet2]
        WebIngressSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.WebIngressSecurityGroup]
        VPCId:
           Fn::GetAtt: [VPCStack, Outputs.VPC]
        EnvironmentName: !Ref EnvironmentName

  JenkinsInstance:
    DependsOn: LambdaFunc
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/jenkins.yml
      Parameters:
        EnvironmentName:
          !Ref EnvironmentName
        LambdaArn:
          Fn::GetAtt: [AMICreateFunction, Outputs.LambdaArn]
        PublicSubnet2:
          Fn::GetAtt: [VPCStack, Outputs.PublicSubnet2]
        SSHIngressSecurityGroup:
          Fn::GetAtt: [VPCStack, Outputs.SSHIngressSecurityGroup]
        VPCId:
          Fn::GetAtt: [VPCStack, Outputs.VPC]

  LambdaFunc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-eu-west-2.amazonaws.com/cfn-demo-ianp/lambda.yml
      Parameters:
        EnvironmentName:
          !Ref EnvironmentName