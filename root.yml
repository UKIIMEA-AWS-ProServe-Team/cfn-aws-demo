
# Demo: Not for production use, not production quality!

AWSTemplateFormatVersion: "2010-09-09"
Parameters:

  EnvironmentName:
    Description: A *UNIQUE* name that does not already exist when CFN runs.
    Type: String
    Default: DEMO

  NumberOfWorkerNodes:
    Description: Minimum number of worker nodes desired
    Type: Number
    Default: 2
    MaxValue: 10

  VpcCIDR:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.10.0/24

  PublicSubnet2CIDR:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.11.0/24

  ManagerPrivateIP:
    Description: "** DO NOT CHANGE - USED AS CONSTANT **"
    Type: String
    Default: 10.192.10.20

  JenkinsInstanceType:
    Description: Jenkins instance type
    Type: String
    Default: t3a.small
    AllowedValues: 
      - t3a.nano
      - t3a.micro
      - t3a.small

  DockerManagerInstanceType:
    Description: Docker manager instance type
    Type: String
    Default: t3a.nano
    AllowedValues: 
      - t3a.nano
      - t3a.micro
      - t3a.small

  DockerWorkerInstanceType:
    Description: Docker worker instance type
    Type: String
    Default: t3a.nano
    AllowedValues: 
      - t3a.nano
      - t3a.micro
      - t3a.small
  
  DockerAMIId:
    Description: Docker AMI Id
    Type: String
    Default: ami-0389b2a3c4948b1a0

  InstanceKeypairName:
    Description: Keypair for instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: automation

  JenkinsEIPAllocation:
    Description: "Warning do not change - as been pre-created"
    Type: String
    Default: eipalloc-08c04d22327eb87e9

  SourceS3BucketName:
    Description: Source S3 bucket name
    Type: String
    Default: cfn-demo-ianp

  SourceS3BucketURI:
    Description: Base URI for source S3 bucket location
    Type: String
    Default: https://s3-eu-west-2.amazonaws.com/
  
  LambdaFunctionName:
    Description: Lambda function, zip, etc name
    Type: String
    Default: amicreate
  
  R53HostedZoneId:
    Description: R53 Hosted Zone Id
    Type: String
    Default: ZR4URMES3MOE4
  
  R53HostedZoneDomain:
    Description: R53 Hosted Zone Domain
    Type: String
    Default: cpsdxc.co.uk

Resources:

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties :
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/vpc-nested.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR

  MgrENI:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/MgrENI.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        DockerSecurityGroup: !GetAtt VPCStack.Outputs.DockerSecurityGroup
        SSHIngressSecurityGroup: !GetAtt VPCStack.Outputs.SSHIngressSecurityGroup
        WebIngressSecurityGroup: !GetAtt VPCStack.Outputs.WebIngressSecurityGroup
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PrivateIP: !Ref ManagerPrivateIP

  DockerMgr:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/EC2-DockerMgr.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        MgrENI: !GetAtt MgrENI.Outputs.MgrENI
        InstanceType: !Ref DockerManagerInstanceType
        KeyName: !Ref InstanceKeypairName
        DockerAMI: !Ref DockerAMIId
        MgrPrivateIP: !Ref ManagerPrivateIP

  WorkerNodeLaunchTemplate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/EC2-WorkerLaunchTemplate.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        DockerSecurityGroup: !GetAtt VPCStack.Outputs.DockerSecurityGroup
        SSHIngressSecurityGroup: !GetAtt VPCStack.Outputs.SSHIngressSecurityGroup
        WebIngressSecurityGroup: !GetAtt VPCStack.Outputs.WebIngressSecurityGroup
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        InstanceType: !Ref DockerWorkerInstanceType
        KeyName: !Ref InstanceKeypairName
        DockerAMI: !Ref DockerAMIId

  ASGGroup:
    DependsOn: 
      - DockerMgr
      - DemoALB
      - WorkerNodeLaunchTemplate
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/ASG.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NumberOfWorkerNodes: !Ref NumberOfWorkerNodes
        WorkerNodeLaunchTemplate: !GetAtt WorkerNodeLaunchTemplate.Outputs.WorkerNodeLaunchTemplate
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        ALBTargetGroup: !GetAtt DemoALB.Outputs.ALBTargetGroup

  DemoALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/ALB.yml
      Parameters:
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        WebIngressSecurityGroup: !GetAtt VPCStack.Outputs.WebIngressSecurityGroup
        VPCId: !GetAtt VPCStack.Outputs.VPC
        EnvironmentName: !Ref EnvironmentName

  JenkinsInstance:
    DependsOn: LambdaFunc
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/jenkins.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        SSHIngressSecurityGroup: !GetAtt VPCStack.Outputs.SSHIngressSecurityGroup
        VPCId: !GetAtt VPCStack.Outputs.VPC
        InstanceType: !Ref JenkinsInstanceType
        KeyName: !Ref InstanceKeypairName
        JenkinsIPAllocationId: !Ref JenkinsEIPAllocation

  LambdaFunc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/lambda.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        S3BucketName: !Ref SourceS3BucketName
        LambdaZipName: !Ref LambdaFunctionName

  LambdaExec:
    DependsOn: JenkinsInstance
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/lambdaexec.yml
      Parameters:
        LambdaArn: !GetAtt LambdaFunc.Outputs.LambdaArn

  DNSRecord:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${SourceS3BucketURI}${SourceS3BucketName}/dnsrecord.yml
      Parameters:
        ALBAddr: !GetAtt DemoALB.Outputs.ALBAddr
        ALBZoneId: !GetAtt DemoALB.Outputs.ALBZoneId
        EnvironmentName: !Ref EnvironmentName
        R53HostedZoneId: !Ref R53HostedZoneId
        R53Domain: !Ref R53HostedZoneDomain

